#include "map.hpp"

Map::Map()
{
    fillMap();
}

void Map::printMap(int lvl, int playerX, int playerY)
{
    for (int i = 0; i < 7; i++) {
        for (int j = 0; j < 8; j++) {
            if(playerX == j && playerY == i) {
                std::cout << "@";
            } else {
                std::cout << m_map[lvl][i][j];
            }

        }
        std::cout << std::endl;
    }
}

void Map::fillMap()
{
    m_map.push_back({
        {'#', '#', '#', '#', '#', '#', '#', '#'},
        {'#', '.', '$', '.', '.', '.', '.', '#'},
        {'#', '.', '.', '.', '.', '.', '.', '#'},
        {'#', '.', '.', '.', '.', '$', '.', '#'},
        {'#', '.', '.', '.', '.', '.', '.', '#'},
        {'#', '.', '$', '.', '.', '.', '>', '#'},
        {'#', '#', '#', '#', '#', '#', '#', '#'}
    });

    m_map.push_back({
        {'#', '#', '#', '#', '#', '#', '#', '#'},
        {'#', '.', '.', '.', '.', '.', '.', '#'},
        {'#', '.', '.', '.', '.', '.', '.', '#'},
        {'#', '.', '.', '.', '.', '$', '.', '#'},
        {'#', '.', '.', '.', '.', '.', '.', '#'},
        {'#', '$', '.', '.', '.', '.', '>', '#'},
        {'#', '#', '#', '#', '#', '#', '#', '#'}
    });

    m_map.push_back({
        {'#', '#', '#', '#', '#', '#', '#', '#'},
        {'#', '.', '.', '.', '.', '.', '.', '#'},
        {'#', '.', '.', '.', '.', '.', '.', '#'},
        {'#', '.', '.', '.', '.', '$', '.', '#'},
        {'#', '.', '.', '.', '.', '.', '.', '#'},
        {'#', '$', '.', '.', '.', '.', '>', '#'},
        {'#', '#', '#', '#', '#', '#', '#', '#'}
    });
}
